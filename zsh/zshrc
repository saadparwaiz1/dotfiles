# vim: set foldmethod=marker foldlevel=0 nomodeline:
# ============================================================================
# Set Env Variable {{{
# ============================================================================
export PATH="/opt/intel/homebrew/bin:$PATH:/Users/saadparwaiz/Library/Python/3.8/bin:/Library/Developer/CommandLineTools/usr/bin"
export MANPATH="/opt/intel/homebrew/share/man${MANPATH+:$MANPATH}:"
export INFOPATH="/opt/intel/homebrew/share/info:${INFOPATH:-}"
export MANPAGER="sh -c 'col -bx | bat -l man -p'"
# }}}
# ============================================================================
# Set Up ZINIT {{{
# ============================================================================
fpath+=/opt/intel/homebrew/share/zsh/site-functions

typeset -gA ZINIT
export ZINIT[BIN_DIR]=/opt/intel/homebrew/opt/zinit
export ZINIT[HOME_DIR]=/opt/intel/homebrew/opt/zinit
export ZINIT[ZCOMPDUMP_PATH]=$XDG_CACHE_HOME/zsh/zcompdump-$ZSH_VERSION
export ZINIT[MUTE_WARNINGS]=1
# }}}
# ============================================================================
# ZINIT BLOCK {{{
# ============================================================================
source $ZINIT[HOME_DIR]/zinit.zsh
#-----------------------------------------------------------------------------
# CommandLine Editing
#-----------------------------------------------------------------------------
zinit ice wait'!0'
zinit light Aloxaf/fzf-tab

zinit wait lucid atload"zicompinit; zicdreplay" blockf for \
	zsh-users/zsh-completions

zinit wait'!1' lucid for \
	atinit"ZINIT[COMPINIT_OPTS]=-C; zicompinit; zicdreplay" \
	zdharma/fast-syntax-highlighting \
	blockf \
	zsh-users/zsh-completions \
	atload"!_zsh_autosuggest_start" \
	zsh-users/zsh-autosuggestions

zinit ice wait'!0'
zinit light zsh-users/zsh-history-substring-search

zinit ice wait'!2'
zinit light hlissner/zsh-autopair
#-----------------------------------------------------------------------------
# KEYBINDINGS
#-----------------------------------------------------------------------------
zinit ice wait'!0'
zinit light softmoth/zsh-vim-mode
# }}}
# ============================================================================
# ZSH OPTIONS {{{
# ============================================================================
setopt autocd
setopt correct
setopt BANG_HIST
setopt HIST_BEEP
setopt HIST_VERIFY
setopt prompt_subst
setopt SHARE_HISTORY
setopt EXTENDED_HISTORY
setopt HIST_IGNORE_DUPS
setopt HIST_FIND_NO_DUPS
setopt HIST_IGNORE_SPACE
setopt HIST_SAVE_NO_DUPS
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_EXPIRE_DUPS_FIRST
# }}}
# ============================================================================
# ZSH MODULES {{{
# ============================================================================
# ----------------------------------------------------------------------------
# Colors Module
# ----------------------------------------------------------------------------
autoload -U colors && colors
# ----------------------------------------------------------------------------
# Tab Completion Module
# ----------------------------------------------------------------------------
autoload -U compinit
zmodload zsh/complist

# customise tab completion
zstyle ':completion:*' menu select
zstyle ':completion:*' rehash true
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' special-dirs true
zstyle ':completion:*' verbose yes
zstyle ':completion::*:vi:*:*' file-patterns 'Makefile|*(rc|log)|*.(php|tex|bib|sql|zsh|ini|sh|vim|rb|sh|js|tpl|csv|rdf|txt|phtml|tex|py|n3):vi-files:vim\ likes\ these\ files *~(Makefile|*(rc|log)|*.(log|rc|php|tex|bib|sql|zsh|ini|sh|vim|rb|sh|js|tpl|csv|rdf|txt|phtml|tex|py|n3)):all-files:other\ files'
zstyle ':completion:*:*:make:*' tag-order 'targets'
zstyle ':completion::*:kill:*:*' command 'ps xf -U $USER -o pid,%cpu,cmd'
zstyle ':completion::*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;32'
zstyle ':completion:*' matcher-list 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'
zstyle ":completion:*" matcher-list 'm:{A-Zöäüa-zÖÄÜ}={a-zÖÄÜA-Zöäü}'
zstyle ':completion:*:(scp|rsync):*' tag-order ' hosts:-ipaddr:ip\ address hosts:-host:host files'
zstyle ':completion:*:(ssh|scp|rsync):*:hosts-host' ignored-patterns '*(.|:)*' loopback ip6-loopback localhost ip6-localhost broadcasthost
zstyle ':completion:*:(ssh|scp|rsync):*:hosts-ipaddr' ignored-patterns '^(<->.<->.<->.<->|(|::)([[:xdigit:].]##:(#c,2))##(|%*))' '127.0.0.<->' '255.255.255.255' '::1' 'fe80::*'

# Generate Cache
compinit -d $XDG_CACHE_HOME/zsh/zcompdump-$ZSH_VERSION
_comp_options+=(globdots)
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path "$XDG_CACHE_HOME/zsh/zcompcache"
# ----------------------------------------------------------------------------
# Git Module For Prompt
# ----------------------------------------------------------------------------
autoload -Uz vcs_info
precmd_vcs_info() { vcs_info }
precmd_functions+=( precmd_vcs_info )
zstyle ':vcs_info:git:*' formats ' %F{240}(%b)%r%f'
zstyle ':vcs_info:*' enable git
# }}}
# ============================================================================
# ZSH HOOKS {{{
# ============================================================================
# }}}
# ============================================================================
# ZSH ALIASES {{{
# ============================================================================
# Better Options For System Commands
alias cp="cp -iv"
alias mv="mv -iv"
alias rm="rm -iv"
alias less="less -R"
alias sudo="nocorrect sudo "

if command -v exa &>/dev/null; then
	alias ls="exa --icons"
	alias la="exa -lah --icons"
	alias ll="exa --icons -alh  --git-ignore"
else
	alias ls="ls -GF"
	alias la="ls -A"
	alias ll="ls -alh"
fi

# Aliases for custom commands
alias purge="sudo --stdin purge"
alias keys="pbcopy < ~/.ssh/id_rsa.pub"
alias reload="source $ZDOTDIR/.zshrc"
alias nightly-nvim="brew uninstall neovim && brew install --HEAD neovim && brew autoremove && rm -rf $(/opt/intel/homebrew/bin/brew --prefix)/etc/luarocks"
alias bu="brew update && brew upgrade --greedy"
alias ds='fd --hidden --no-ignore ".DS_Store" -x rm'
alias d="kitty +kitten diff"
alias del-history='/bin/rm "$XDG_DATA_HOME/HISTORY/zsh-history"'
alias nvimbrew="$XDG_CONFIG_HOME/darwin/nvimbrew.sh"
# }}}
# ============================================================================
# ZSH FUNCTIONS {{{
# ============================================================================
# Utils
github() {
	echo "$1" | sed s/github/raw\.githubusercontent/ | sed s/blob.//g | xargs curl -O
}

del() {
	mv "$@" ~/.Trash
}

dir() {
	for i in */; do
		cd "$i"
		eval $1
		cd ".."
	done
}

h() {
	(( # == 0 )) && cd ~ && return

	dest=$(fd --type d -E "venv" -E "venv.nosync" -E "Containers" -E "Group\ Containers" -E "node_modules" -E 'site-packages' -E '[Cc]ache*' --absolute-path --hidden "$1" ~)

	if ! cd "$dest" &>/dev/null; then
		dest=$(echo "$dest" | fzf)
		cd "$dest"
	fi
}
# }}}
# ============================================================================
# ZSH HISTORY {{{
# ============================================================================
HISTSIZE=10000
SAVEHIST=10000
HISTFILE="$XDG_DATA_HOME/History/zsh-history"
# }}}
# ============================================================================
# ZSH PROMPT {{{
# ============================================================================
prompts() {
	for COLOR in RED GREEN YELLOW BLUE MAGENTA CYAN BLACK WHITE; do
		eval $COLOR='%{$fg[${(L)COLOR}]%}'
	done
	eval RESET='%{$reset_color%}'

	export PS1='%B${RED}[${YELLOW}sp${CYAN}@${MAGENTA}home${GREEN}:${MAGENTA}%(5~|%3~|%~)${RED}]${GREEN}%#%b${RESET} '
	export RPROMPT='%(?.${GREEN} ✓.${RED} ✘) ${RESET} $vcs_info_msg_0_'
}

prompts
# }}}
# ============================================================================
# ZSH KEYBINDINGS {{{
# ============================================================================
bindkey -v

zle-keymap-select() {
	if [[ ${KEYMAP} == vicmd ]] || [[ $1 = 'block' ]]; then
		echo -ne '\e[1 q'
	elif [[ ${KEYMAP} == main ]] ||
		[[ ${KEYMAP} == viins ]] ||
		[[ ${KEYMAP} = '' ]] ||
		[[ $1 = 'beam' ]]; then
		echo -ne '\e[5 q'
	fi
}

zle -N zle-keymap-select

zle-line-init() {
	zle -K viins
	echo -ne '\e[5 q'
}

zle -N zle-line-init
echo -ne '\e[5 q'
preexec() {
	echo -ne '\e[5 q'
}

bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down
bindkey '^[[1;3C' forward-word
bindkey jj vi-cmd-mode
# }}}
# ============================================================================
# ZSH PLUGINS {{{
# ============================================================================
#-----------------------------------------------------------------------------
# VIM MODE
#-----------------------------------------------------------------------------
export MODE_INDICATOR=""
#-----------------------------------------------------------------------------
#FZF
#-----------------------------------------------------------------------------
[[ $- == *i* ]] && source "/opt/intel/homebrew/opt/fzf/shell/completion.zsh"

source "/opt/intel/homebrew/opt/fzf/shell/key-bindings.zsh"

if command -v fd &>/dev/null; then
	alias find='fd'
	export FZF_DEFAULT_COMMAND="fd --type f --follow --hidden"
	export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
	export FZF_ALT_C_COMMAND="$FZF_DEFAULT_COMMAND"
else
	export FZF_DEFAULT_COMMAND="find . -type f -name '*'"
	export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
	export FZF_ALT_C_COMMAND="$FZF_DEFAULT_COMMAND"
fi
#----------------------------------------------------------------------------
# Auto Suggestions
# ---------------------------------------------------------------------------
export ZSH_AUTOSUGGEST_STRATEGY=(history completion)
export ZSH_AUTOSUGGEST_USE_ASYNC=1
# }}}
# ============================================================================
